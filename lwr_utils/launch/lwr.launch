<launch>
<arg name="debug" default="false"/>
<arg name="robot_description_upload_file" default="$(find lwr_description)/launch/lwr_upload.launch"/>
<arg name="rviz" default="false"/>
<arg name="gazebo_gui" default="false"/>
<arg name="TAO" default="false"/>
<arg name="sim" default="false"/>
<arg name="start_paused" default="false"/>
<arg name="use_sim_time" default="false"/>
<arg name="root_link" default="link_0"/>
<arg name="tip_link" default="link_7"/>
<!-- Tools -->
<arg name="load_base" default="false" />
<arg name="load_ati_sensor" default="false" />
<arg name="load_calib_tool" default="false" />
<arg name="load_table" default="false" />
<arg name="load_handle" default="false" />
<arg name="load_laser" default="false" />
<arg name="load_weight" default="false" />
<arg name="load_head_cam" default="false" />
<arg name="load_screwdriver" default="false" />
<!-- Gazebo ros control plugin for debugging -->
<arg name="load_gazebo_ros_control" default="false" />

<arg name="world_name" default="$(find lwr_utils)/launch/lwr.world"/>
<!-- Start Gazebo here or start it elsewhere and leave it open -->
<arg name="launch_gazebo" default="false" />

<arg if="$(arg sim)"     name="robot_name" default="lwr_sim"/>
<arg unless="$(arg sim)" name="robot_name" default="lwr"/>

<arg if="$(arg sim)"     name="robot_ns" default="/" />
<arg unless="$(arg sim)" name="robot_ns" default="/" />

<arg name="tf_prefix" default="$(arg robot_ns)"/>

<arg if="$(arg sim)"     name="rviz_config" default="$(find lwr_utils)/launch/lwr_sim.rviz"/>
<arg unless="$(arg sim)" name="rviz_config" default="$(find lwr_utils)/launch/lwr_hw.rviz"/>

<node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)"/>

<arg name="initial_joint_positions" default="[0, 0, 0, 0, 0, 0, 0]"/>

<group if="$(arg use_sim_time)">
  <param name="/use_sim_time" value="true" />
</group>

<group ns="$(arg robot_ns)">
    <rosparam if="$(arg sim)" command="load" file="$(find lwr_utils)/launch/sim_ros_control_controllers_effort.yml" />
    <rosparam unless="$(arg sim)" command="load" file="$(find lwr_utils)/launch/hw_ros_control_controllers_effort.yml" />
</group>

<arg unless="$(arg start_paused)" name="command_arg1" value=""/>
<arg     if="$(arg start_paused)" name="command_arg1" value="-u"/>
<arg unless="$(arg debug)" name="script_type" value="gzserver"/>
<arg     if="$(arg debug)" name="script_type" value="debug"/>

<node if="$(arg load_gazebo_ros_control)" name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="false" output="screen" args="$(arg command_arg1) --verbose $(arg world_name)" />

<node if="$(arg gazebo_gui)" name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>

<!-- Description and/or gazebo -->
<group ns="$(arg robot_ns)">
    <!--group ns="$(arg robot_name)"-->
    
    <rosparam ns="$(arg robot_name)">
        upper_joint_limits: [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0]
        lower_joint_limits: [-100.0, -100.0, -100.0, -100.0, -100.0, -100.0, -100.0]
        joint_limits: ["joint_0","joint_1","joint_2","joint_3","joint_4","joint_5","joint_6"]
        kp_default: [450.0, 450.0, 200.0, 200.0, 200.0, 20.0, 10.0]
        kd_default: [1.0, 1.0, 1.0, 0.7, 0.7, 0.1, 0.0]
        kcp_default: [1000.0, 1000.0, 1000.0, 200.0, 200.0, 200.0]
        kcd_default: [0.7, 0.7, 0.7, 0.7, 0.7, 0.7]
    </rosparam>
    
    <param name="tf_prefix" type="str" value="$(arg tf_prefix)"/>
    <param name="robot_name" type="str" value="$(arg robot_name)"/>
    <param name="robot_ns" type="str" value="$(arg robot_ns)"/>
    <param name="root_link" type="str" value="$(arg root_link)"/>
    <param name="tip_link" type="str" value="$(arg tip_link)"/>
    <param name="is_sim" type="bool" value="$(arg sim)"/>
    <param name="start_paused" type="bool" value="$(arg start_paused)"/>

    <!-- Gazebo launches it if sim, otherwise here so that lwr_gazebo is standalone (hacky) -->
    <include file="$(arg robot_description_upload_file)">
        <arg name="load_base" value="$(arg load_base)" />
        <arg name="load_ati_sensor" value="$(arg load_ati_sensor)" />
        <arg name="load_calib_tool" value="$(arg load_calib_tool)" />
        <arg name="load_table" value="$(arg load_table)" />
        <arg name="load_handle" value="$(arg load_handle)" />
        <arg name="load_laser" value="$(arg load_laser)" />
        <arg name="load_weight" value="$(arg load_weight)" />
        <arg name="load_head_cam" value="$(arg load_head_cam)" />
        <arg name="load_screwdriver" value="$(arg load_screwdriver)" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="load_gazebo_ros_control" value="$(arg load_gazebo_ros_control)" />
    </include>

    <!-- world is in the urdf, but sometime we want everything in a different namespace, so we'll have /sub/world. This connects /world to /sub/world-->
    <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg robot_name)_world" args="0 0 0 0 0 0 /world $(arg tf_prefix)/world 100"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="1000"/>
    </node>
    <!--/group-->
</group>

<include if="$(arg launch_gazebo)" file="$(find lwr_utils)/launch/empty_world.launch">
    <arg name="paused" value="$(arg start_paused)"/>
</include>

<include if="$(arg sim)" file="$(find lwr_utils)/launch/spawn_robot.launch">
    <arg name="robot_ns" value="$(arg robot_ns)"/>
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="x" value="0.0"/>
    <arg name="y" value="0.0"/>
    <arg name="z" value="0.0"/>
    <arg name="tf_prefix" value="$(arg tf_prefix)"/>
    <arg name="root_link" value="$(arg root_link)"/>
    <arg name="tip_link" value="$(arg tip_link)"/>
    <arg name="load_base" value="$(arg load_base)" />
    <arg name="load_ati_sensor" value="$(arg load_ati_sensor)" />
    <arg name="load_calib_tool" value="$(arg load_calib_tool)" />
    <arg name="load_table" value="$(arg load_table)" />
    <arg name="load_handle" value="$(arg load_handle)" />
    <arg name="load_laser" value="$(arg load_laser)" />
    <arg name="load_weight" value="$(arg load_weight)" />
    <arg name="load_head_cam" value="$(arg load_head_cam)" />
    <arg name="load_screwdriver" value="$(arg load_screwdriver)" />
    <arg name="initial_joint_positions" value="$(arg initial_joint_positions)" />
    <arg name="load_gazebo_ros_control" value="$(arg load_gazebo_ros_control)" />
    <arg name="robot_description_upload_file" value="$(arg robot_description_upload_file)"/>
</include>

<include if="$(arg sim)" file="$(find experiment)/launch/spawn_experiment.launch"/>

</launch>
